{
  "metaconfig": {
    "lock_defaults": "^ Decides whether or not to use current defaults or defaults on config file.",
    "cut_prints": "^ Clear the printed info for trading each stock",
    "debug_time": "09:35:22"
  },
  "misc": {
    "buy_clock_countdown_amount": "^ int, the amount of seconds before buying is viable again",
    "dollar_risk": "^ negative integer, Amount of money lost that will trigger an immediate exit",
    "hard_stop": "^ string, formatted as %H:%M:%S, time to force a trading stop.",
    "ideal_volatility": "^ integer, percentage value of ideal volatility",
    "volume_check": "checks to make sure that the minimum dvol is over $100,000",
    "cancel_spec_time": 4,
    "minimum_volume": 100000,
    "lookahead_mins": 12
  },
  "buy_conditions": {
    "aggresive_average": {
      "active": "^ average follows the current price extremely close.",
      "priority": 2
    },
    "drop_below_average": {
      "active": "^ buys based on current price, with no concern for how much the",
      "max_vola": "^ maximum volatility drop to be considered for drop.",
      "min_vola": "^ minimum volatility to trigger a drop below average",
      "priority": 1
    },
    "progressive": {
      "active": "scales the investing based on downtrend duration. Works logarithmically",
      "priority": 3,
      "max_trend_duration": "duration of trend to invest everything at."
    }
  },
  "sell_conditions": {
    "dollar_risk_check": {
      "active": "^ checks the amount of money lost real and unreal and sees if it has exceeded the max risk (set in misc)",
      "priority": 1
    },
    "exposure_over_account_limit": {
      "active": "^ If more money is invested than allocated to the account, then sell.",
      "priority": 3
    },
    "percentage_gain": {
      "active": "^ sells are triggered based on sum of positions percentage gain.",
      "perc_gain": "^ integer, number of percentage points to trigger a sell",
      "priority": 4
    },
    "target_unreal": {
      "active": "^ Sell when overall unreal hits a target amount",
      "priority": 5,
      "target_unreal_amount": "^ integer, amount in dollars in unreal pl before selling gets triggered."
    },
    "timed_exit": {
      "active": "^ sell everything and stop trading if past certain time",
      "priority": 2,
      "minute_offset": "^ positive int, number of minutes before the hard_stop setting found under MISC."
    },
    "out_of_steam": {
      "active": false,
      "priority": 10
    },
    "breakeven": {
      "active": false,
      "priority": 6
    },
    "quit_early": {
      "active": false,
      "priority": 1
    },
    "four_red_candles": {
      "active": false,
      "priority": 5
    },
    "bad_differentials": {
      "active": false,
      "priority": 6
    }
  },
  "sim_settings": {
    "execution_lag": "^ integer, number of seconds required to wait before each fill",
    "execution_price_offset": "^ price must exceed execution price by this amount to register a fill.",
    "vol_min_chunk_cash": "integer cash, minimum chunk for order to be broken up into in cash.",
    "vol_offset_multiplier": "^ Volume for execution needs to exceed the amount * this multiplier to register."
  }
}